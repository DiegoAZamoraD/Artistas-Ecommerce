{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diego\\\\OneDrive\\\\Escritorio\\\\Artistas-Mern\\\\ecommerce\\\\client\\\\src\\\\components\\\\mainpages\\\\createProduct\\\\CreateProduct.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { GlobalState } from '../../../GlobalState';\nimport Loading from '../utils/loading/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  product_id: '',\n  title: '',\n  price: 0,\n  description: 'Ingresa aqui la descripcion de tu producto',\n  content: 'ingrese aqui el contenido de su producto para que el cliente sepa',\n  category: ''\n};\nfunction CreateProduct() {\n  _s();\n  const state = useContext(GlobalState);\n  const [product, setProduct] = useState(initialState);\n  const [categories] = state.categoriesAPI.categories;\n  const [images, setImages] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [isAdmin] = state.userAPI.isAdmin;\n  const [token] = state.token;\n  const handleUpload = async e => {\n    e.preventDefault();\n    try {\n      if (!isAdmin) return alert(\"you're not an admin\");\n      const file = e.target.files[0];\n      if (!file) return alert(\"File not exist\");\n      if (file.size > 1024 * 1024) return alert(\"Size too large!\");\n      if (file.type !== 'image/jpeg' && file.type !== 'image/png') return alert(\"File format is incorrect.\");\n      let formData = new FormData();\n      formData.append('file', file);\n      setLoading(true);\n      const res = await axios.post('/api/upload/', formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          Authorization: token\n        }\n      });\n      setLoading(false);\n      setImages(res.data);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n  const styleUpload = {\n    display: images ? \"block\" : \"none\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create_product\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        id: \"file_up\",\n        onChange: handleUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"file_img\",\n        style: styleUpload,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"{images ? images.url : '' }\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"product_id\",\n          children: \" product ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"product_id\",\n          id: \"product_id\",\n          required: true,\n          value: product.product_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \" Title \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          id: \"title\",\n          required: true,\n          value: product.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: \"Price \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"price\",\n          id: \"price\",\n          required: true,\n          value: product.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"description\",\n          id: \"description\",\n          required: true,\n          value: product.description,\n          rows: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"Content \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"content\",\n          id: \"content\",\n          required: true,\n          value: product.content,\n          rows: \"7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: \"Category \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"category\",\n          value: product.category,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Please Select a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category._id,\n            children: category.name\n          }, category._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateProduct, \"9fzVeb2OLvgmp3XAyPjMOvkvlKs=\");\n_c = CreateProduct;\nexport default CreateProduct;\n\n// import React, {useState, useContext, useEffect} from 'react'\n// import axios from 'axios'\n// import {GlobalState} from '../../../GlobalState'\n// import Loading from '../utils/loading/Loading'\n// import {useNavigate, useParams} from 'react-router-dom'\n\n// const initialState = {\n//     product_id: '',\n//     title: '',\n//     price: 0,\n//     description: 'How to and tutorial videos of cool CSS effect, Web Design ideas,JavaScript libraries, Node.',\n//     content: 'Welcome to our channel Dev AT. Here you can learn web designing, UI/UX designing, html css tutorials, css animations and css effects, javascript and jquery tutorials and related so on.',\n//     category: '',\n//     _id: ''\n// }\n\n// function CreateProduct() {\n//     const state = useContext(GlobalState)\n//     const [product, setProduct] = useState(initialState)\n//     const [categories] = state.categoriesAPI.categories\n//     const [images, setImages] = useState(false)\n//     const [loading, setLoading] = useState(false)\n\n//     const [isAdmin] = state.userAPI.isAdmin\n//     const [token] = state.token\n\n//     const history = useNavigate()\n//     const param = useParams()\n\n//     const [products] = state.productsAPI.products\n//     const [onEdit, setOnEdit] = useState(false)\n//     const [callback, setCallback] = state.productsAPI.callback\n\n//     useEffect(() => {\n//         if(param.id){\n//             setOnEdit(true)\n//             products.forEach(product => {\n//                 if(product._id === param.id) {\n//                     setProduct(product)\n//                     setImages(product.images)\n//                 }\n//             })\n//         }else{\n//             setOnEdit(false)\n//             setProduct(initialState)\n//             setImages(false)\n//         }\n//     }, [param.id, products])\n\n//     const handleUpload = async e =>{\n//         e.preventDefault()\n//         try {\n//             if(!isAdmin) return alert(\"You're not an admin\")\n//             const file = e.target.files[0]\n\n//             if(!file) return alert(\"File not exist.\")\n\n//             if(file.size > 1024 * 1024) // 1mb\n//                 return alert(\"Size too large!\")\n\n//             if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\n//                 return alert(\"File format is incorrect.\")\n\n//             let formData = new FormData()\n//             formData.append('file', file)\n\n//             setLoading(true)\n//             const res = await axios.post('/api/upload', formData, {\n//                 headers: {'content-type': 'multipart/form-data', Authorization: token}\n//             })\n//             setLoading(false)\n//             setImages(res.data)\n\n//         } catch (err) {\n//             alert(err.response.data.msg)\n//         }\n//     }\n\n//     const handleDestroy = async () => {\n//         try {\n//             if(!isAdmin) return alert(\"You're not an admin\")\n//             setLoading(true)\n//             await axios.post('/api/destroy', {public_id: images.public_id}, {\n//                 headers: {Authorization: token}\n//             })\n//             setLoading(false)\n//             setImages(false)\n//         } catch (err) {\n//             alert(err.response.data.msg)\n//         }\n//     }\n\n//     const handleChangeInput = e =>{\n//         const {name, value} = e.target\n//         setProduct({...product, [name]:value})\n//     }\n\n//     const handleSubmit = async e =>{\n//         e.preventDefault()\n//         try {\n//             if(!isAdmin) return alert(\"You're not an admin\")\n//             if(!images) return alert(\"No Image Upload\")\n\n//             if(onEdit){\n//                 await axios.put(`/api/products/${product._id}`, {...product, images}, {\n//                     headers: {Authorization: token}\n//                 })\n//             }else{\n//                 await axios.post('/api/products', {...product, images}, {\n//                     headers: {Authorization: token}\n//                 })\n//             }\n//             setCallback(!callback)\n//             history.push(\"/\")\n//         } catch (err) {\n//             alert(err.response.data.msg)\n//         }\n//     }\n\n//     const styleUpload = {\n//         display: images ? \"block\" : \"none\"\n//     }\n//     return (\n//         <div className=\"create_product\">\n//             <div className=\"upload\">\n//                 <input type=\"file\" name=\"file\" id=\"file_up\" onChange={handleUpload}/>\n//                 {\n//                     loading ? <div id=\"file_img\"><Loading /></div>\n\n//                     :<div id=\"file_img\" style={styleUpload}>\n//                         <img src={images ? images.url : ''} alt=\"\"/>\n//                         <span onClick={handleDestroy}>X</span>\n//                     </div>\n//                 }\n\n//             </div>\n\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"row\">\n//                     <label htmlFor=\"product_id\">Product ID</label>\n//                     <input type=\"text\" name=\"product_id\" id=\"product_id\" required\n//                     value={product.product_id} onChange={handleChangeInput} disabled={onEdit} />\n//                 </div>\n\n//                 <div className=\"row\">\n//                     <label htmlFor=\"title\">Title</label>\n//                     <input type=\"text\" name=\"title\" id=\"title\" required\n//                     value={product.title} onChange={handleChangeInput} />\n//                 </div>\n\n//                 <div className=\"row\">\n//                     <label htmlFor=\"price\">Price</label>\n//                     <input type=\"number\" name=\"price\" id=\"price\" required\n//                     value={product.price} onChange={handleChangeInput} />\n//                 </div>\n\n//                 <div className=\"row\">\n//                     <label htmlFor=\"description\">Description</label>\n//                     <textarea type=\"text\" name=\"description\" id=\"description\" required\n//                     value={product.description} rows=\"5\" onChange={handleChangeInput} />\n//                 </div>\n\n//                 <div className=\"row\">\n//                     <label htmlFor=\"content\">Content</label>\n//                     <textarea type=\"text\" name=\"content\" id=\"content\" required\n//                     value={product.content} rows=\"7\" onChange={handleChangeInput} />\n//                 </div>\n\n//                 <div className=\"row\">\n//                     <label htmlFor=\"categories\">Categories: </label>\n//                     <select name=\"category\" value={product.category} onChange={handleChangeInput} >\n//                         <option value=\"\">Please select a category</option>\n//                         {\n//                             categories.map(category => (\n//                                 <option value={category._id} key={category._id}>\n//                                     {category.name}\n//                                 </option>\n//                             ))\n//                         }\n//                     </select>\n//                 </div>\n\n//                 <button type=\"submit\">{onEdit? \"Update\" : \"Create\"}</button>\n//             </form>\n//         </div>\n//     )\n// }\n\n// export default CreateProduct\n// import React, {useState, useContext, useEffect}  from 'react'\n// import axios from 'axios'\n// import {GlobalState} from '../../../GlobalState'\n// import Loading from '../utils/loading/Loading'\n\n// const initialState = {\n//   product_id: '',\n//   title: '',\n//   price: 0,\n//   description: 'How to and tutorial videos of cool CSS effect, Web Design ideas,JavaScript libraries, Node.',\n//   content: 'Welcome to our channel Dev AT. Here you can learn web designing, UI/UX designing, html css tutorials, css animations and css effects, javascript and jquery tutorials and related so on.',\n//   category: '' \n\n// }\n\n// function CreateProduct() {\n//     const state = useContext(GlobalState)\n//     const [product, setProduct] = useState(initialState)\n//     const [categories] = state.categoriesAPI.categories\n//     const [images, setImages] = useState(false)\n//     const [loading, setLoading] = useState(false)\n\n//     const [isAdmin] = state.userAPI.isAdmin\n//     const [token] = state.token\n\n//     const handleUpload = async e =>{\n//         e.preventDefault()\n//         try {\n//             if(!isAdmin) return alert(\"You're not an admin\")\n//             const file = e.target.files[0]\n\n//             if(!file) return alert(\"File not exist.\")\n\n//             if(file.size > 1024 * 1024) // 1mb\n//                 return alert(\"Size too large!\")\n\n//             if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\n//                 return alert(\"File format is incorrect.\")\n\n//             let formData = new FormData()\n//             formData.append('file', file)\n\n//             setLoading(true)\n//             const res = await axios.post('api/upload', formData, {\n//                     headers: {'content-type': 'multipart/form-data', Authorization: token}\n//                 })\n//                 setLoading(false)\n//                 console.log(res)\n\n//         } catch (err) {\n//             alert(err.response.data.msg)\n\n//         }\n//     }\n\n//   const styleUpload = {\n//     display: images ? \"block\" : \"none\"\n//   }\n\n//   return (\n//     <div className=\"create_product\">\n//       <div className=\"upload\">\n//           <input type=\"file\" name=\"file\" id=\"file_up\" onChange={handleUpload} />\n//           <div id=\"file_img\"  style={styleUpload} >\n//                   <img src=\"\" alt=\"\"/>\n//                   <span>X</span>\n//               </div>   \n//       </div>\n\n//       <form >\n//           <div className=\"row\">\n//               <label htmlFor=\"product_id\">Product ID</label>\n//               <input type=\"text\" name=\"product_id\" id=\"product_id\" required\n//               value={product.product_id}  />\n//           </div>\n\n//           <div className=\"row\">\n//               <label htmlFor=\"title\">Title</label>\n//               <input type=\"text\" name=\"title\" id=\"title\" required\n//               value={product.title} />\n//           </div>\n\n//           <div className=\"row\">\n//               <label htmlFor=\"price\">Price</label>\n//               <input type=\"number\" name=\"price\" id=\"price\" required\n//               value={product.price}  />\n//           </div>\n\n//           <div className=\"row\">\n//               <label htmlFor=\"description\">Description</label>\n//               <textarea type=\"text\" name=\"description\" id=\"description\" required\n//               value={product.description} rows =\"5\"  />\n//           </div>\n\n//           <div className=\"row\">\n//               <label htmlFor=\"content\">Content</label>\n//               <textarea type=\"text\" name=\"content\" id=\"content\" required\n//               value={product.content} rows =\"7\"  />\n//           </div>\n\n//           <div className=\"row\">\n//               <label htmlFor=\"categories\">Categories: </label>\n//               <select name=\"category\" value={product.category} >\n//                   <option value=\"\">Please select a category</option>\n//                   {\n//                       categories.map(category => (\n//                           <option value={category._id} key={category._id}>\n//                               {category.name}\n//                           </option>\n//                       ))\n//                   }\n//               </select>\n//           </div>\n\n//           <button type=\"submit\">Create</button>\n//       </form>\n// </div>\n//   )\n// }\n\n// export default CreateProduct\nvar _c;\n$RefreshReg$(_c, \"CreateProduct\");","map":{"version":3,"names":["React","useState","useContext","axios","GlobalState","Loading","initialState","product_id","title","price","description","content","category","CreateProduct","state","product","setProduct","categories","categoriesAPI","images","setImages","loading","setLoading","isAdmin","userAPI","token","handleUpload","e","preventDefault","alert","file","target","files","size","type","formData","FormData","append","res","post","headers","Authorization","data","err","response","msg","styleUpload","display","map","_id","name"],"sources":["C:/Users/diego/OneDrive/Escritorio/Artistas-Mern/ecommerce/client/src/components/mainpages/createProduct/CreateProduct.js"],"sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport Loading from '../utils/loading/Loading'\r\n\r\nconst initialState = {\r\n    product_id: '',\r\n    title: '',\r\n    price: 0,\r\n    description: 'Ingresa aqui la descripcion de tu producto',\r\n    content: 'ingrese aqui el contenido de su producto para que el cliente sepa',\r\n    category: ''\r\n}\r\n\r\nfunction CreateProduct() {\r\n    const state = useContext(GlobalState)\r\n    const [product, setProduct] = useState(initialState)\r\n    const [categories] = state.categoriesAPI.categories\r\n    const [images, setImages] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [isAdmin] = state.userAPI.isAdmin\r\n    const [token] = state.token \r\n\r\n    const handleUpload = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(!isAdmin) return alert(\"you're not an admin\")\r\n            const file = e.target.files[0]\r\n            \r\n            if(!file) return alert(\"File not exist\")\r\n            \r\n            if(file.size > 1024 * 1024)\r\n                return alert(\"Size too large!\")\r\n\r\n            if(file.type !== 'image/jpeg' && file.type !== 'image/png')\r\n                return alert(\"File format is incorrect.\")\r\n\r\n            let formData = new FormData()\r\n            formData.append('file', file)   \r\n            \r\n            setLoading(true)\r\n            const res = await axios.post('/api/upload/', formData,{\r\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n\r\n            })\r\n            setLoading(false)\r\n            setImages(res.data)\r\n\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n    \r\n    const styleUpload = {\r\n        display: images ? \"block\" : \"none\"\r\n    }\r\n\r\n    return (\r\n        <div className='create_product'>\r\n            <div className=\"upload\">\r\n                <input type=\"file\" name='file' id='file_up' onChange={handleUpload}  />\r\n                \r\n                <div id=\"file_img\" style={styleUpload} >\r\n                    <img src=\"{images ? images.url : '' }\" alt=\"\" />\r\n                    <span>X</span>\r\n                </div>\r\n            </div>\r\n\r\n            <form>\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"product_id\"> product ID</label>\r\n                    <input type=\"text\" name='product_id' id='product_id' required\r\n                    value={product.product_id}  />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"title\"> Title </label>\r\n                    <input type=\"text\" name='title' id='title' required\r\n                    value={product.title}  />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"price\">Price </label>\r\n                    <input type=\"number\" name='price' id='price' required\r\n                    value={product.price}  />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"description\">Description </label>\r\n                    <textarea type=\"text\" name='description' id='description' required\r\n                    value={product.description} rows=\"5\" />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"content\">Content </label>\r\n                    <input type=\"text\" name='content' id='content' required\r\n                    value={product.content} rows=\"7\" />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"category\">Category </label>\r\n                    <select name=\"category\" value={product.category} >\r\n                        <option value=\"\">Please Select a category</option>\r\n                        {\r\n                            categories.map(category => (\r\n                                <option value={category._id} key={category._id} >\r\n                                    {category.name}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n\r\n                <button type='submit' >Create</button>\r\n\r\n            </form>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default CreateProduct\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, {useState, useContext, useEffect} from 'react'\r\n// import axios from 'axios'\r\n// import {GlobalState} from '../../../GlobalState'\r\n// import Loading from '../utils/loading/Loading'\r\n// import {useNavigate, useParams} from 'react-router-dom'\r\n\r\n// const initialState = {\r\n//     product_id: '',\r\n//     title: '',\r\n//     price: 0,\r\n//     description: 'How to and tutorial videos of cool CSS effect, Web Design ideas,JavaScript libraries, Node.',\r\n//     content: 'Welcome to our channel Dev AT. Here you can learn web designing, UI/UX designing, html css tutorials, css animations and css effects, javascript and jquery tutorials and related so on.',\r\n//     category: '',\r\n//     _id: ''\r\n// }\r\n\r\n// function CreateProduct() {\r\n//     const state = useContext(GlobalState)\r\n//     const [product, setProduct] = useState(initialState)\r\n//     const [categories] = state.categoriesAPI.categories\r\n//     const [images, setImages] = useState(false)\r\n//     const [loading, setLoading] = useState(false)\r\n\r\n\r\n//     const [isAdmin] = state.userAPI.isAdmin\r\n//     const [token] = state.token\r\n\r\n//     const history = useNavigate()\r\n//     const param = useParams()\r\n\r\n//     const [products] = state.productsAPI.products\r\n//     const [onEdit, setOnEdit] = useState(false)\r\n//     const [callback, setCallback] = state.productsAPI.callback\r\n\r\n//     useEffect(() => {\r\n//         if(param.id){\r\n//             setOnEdit(true)\r\n//             products.forEach(product => {\r\n//                 if(product._id === param.id) {\r\n//                     setProduct(product)\r\n//                     setImages(product.images)\r\n//                 }\r\n//             })\r\n//         }else{\r\n//             setOnEdit(false)\r\n//             setProduct(initialState)\r\n//             setImages(false)\r\n//         }\r\n//     }, [param.id, products])\r\n\r\n//     const handleUpload = async e =>{\r\n//         e.preventDefault()\r\n//         try {\r\n//             if(!isAdmin) return alert(\"You're not an admin\")\r\n//             const file = e.target.files[0]\r\n            \r\n//             if(!file) return alert(\"File not exist.\")\r\n\r\n//             if(file.size > 1024 * 1024) // 1mb\r\n//                 return alert(\"Size too large!\")\r\n\r\n//             if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\r\n//                 return alert(\"File format is incorrect.\")\r\n\r\n//             let formData = new FormData()\r\n//             formData.append('file', file)\r\n\r\n//             setLoading(true)\r\n//             const res = await axios.post('/api/upload', formData, {\r\n//                 headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n//             })\r\n//             setLoading(false)\r\n//             setImages(res.data)\r\n\r\n//         } catch (err) {\r\n//             alert(err.response.data.msg)\r\n//         }\r\n//     }\r\n\r\n//     const handleDestroy = async () => {\r\n//         try {\r\n//             if(!isAdmin) return alert(\"You're not an admin\")\r\n//             setLoading(true)\r\n//             await axios.post('/api/destroy', {public_id: images.public_id}, {\r\n//                 headers: {Authorization: token}\r\n//             })\r\n//             setLoading(false)\r\n//             setImages(false)\r\n//         } catch (err) {\r\n//             alert(err.response.data.msg)\r\n//         }\r\n//     }\r\n\r\n//     const handleChangeInput = e =>{\r\n//         const {name, value} = e.target\r\n//         setProduct({...product, [name]:value})\r\n//     }\r\n\r\n//     const handleSubmit = async e =>{\r\n//         e.preventDefault()\r\n//         try {\r\n//             if(!isAdmin) return alert(\"You're not an admin\")\r\n//             if(!images) return alert(\"No Image Upload\")\r\n\r\n//             if(onEdit){\r\n//                 await axios.put(`/api/products/${product._id}`, {...product, images}, {\r\n//                     headers: {Authorization: token}\r\n//                 })\r\n//             }else{\r\n//                 await axios.post('/api/products', {...product, images}, {\r\n//                     headers: {Authorization: token}\r\n//                 })\r\n//             }\r\n//             setCallback(!callback)\r\n//             history.push(\"/\")\r\n//         } catch (err) {\r\n//             alert(err.response.data.msg)\r\n//         }\r\n//     }\r\n\r\n//     const styleUpload = {\r\n//         display: images ? \"block\" : \"none\"\r\n//     }\r\n//     return (\r\n//         <div className=\"create_product\">\r\n//             <div className=\"upload\">\r\n//                 <input type=\"file\" name=\"file\" id=\"file_up\" onChange={handleUpload}/>\r\n//                 {\r\n//                     loading ? <div id=\"file_img\"><Loading /></div>\r\n\r\n//                     :<div id=\"file_img\" style={styleUpload}>\r\n//                         <img src={images ? images.url : ''} alt=\"\"/>\r\n//                         <span onClick={handleDestroy}>X</span>\r\n//                     </div>\r\n//                 }\r\n                \r\n//             </div>\r\n\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className=\"row\">\r\n//                     <label htmlFor=\"product_id\">Product ID</label>\r\n//                     <input type=\"text\" name=\"product_id\" id=\"product_id\" required\r\n//                     value={product.product_id} onChange={handleChangeInput} disabled={onEdit} />\r\n//                 </div>\r\n\r\n//                 <div className=\"row\">\r\n//                     <label htmlFor=\"title\">Title</label>\r\n//                     <input type=\"text\" name=\"title\" id=\"title\" required\r\n//                     value={product.title} onChange={handleChangeInput} />\r\n//                 </div>\r\n\r\n//                 <div className=\"row\">\r\n//                     <label htmlFor=\"price\">Price</label>\r\n//                     <input type=\"number\" name=\"price\" id=\"price\" required\r\n//                     value={product.price} onChange={handleChangeInput} />\r\n//                 </div>\r\n\r\n//                 <div className=\"row\">\r\n//                     <label htmlFor=\"description\">Description</label>\r\n//                     <textarea type=\"text\" name=\"description\" id=\"description\" required\r\n//                     value={product.description} rows=\"5\" onChange={handleChangeInput} />\r\n//                 </div>\r\n\r\n//                 <div className=\"row\">\r\n//                     <label htmlFor=\"content\">Content</label>\r\n//                     <textarea type=\"text\" name=\"content\" id=\"content\" required\r\n//                     value={product.content} rows=\"7\" onChange={handleChangeInput} />\r\n//                 </div>\r\n\r\n//                 <div className=\"row\">\r\n//                     <label htmlFor=\"categories\">Categories: </label>\r\n//                     <select name=\"category\" value={product.category} onChange={handleChangeInput} >\r\n//                         <option value=\"\">Please select a category</option>\r\n//                         {\r\n//                             categories.map(category => (\r\n//                                 <option value={category._id} key={category._id}>\r\n//                                     {category.name}\r\n//                                 </option>\r\n//                             ))\r\n//                         }\r\n//                     </select>\r\n//                 </div>\r\n\r\n//                 <button type=\"submit\">{onEdit? \"Update\" : \"Create\"}</button>\r\n//             </form>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default CreateProduct\r\n// import React, {useState, useContext, useEffect}  from 'react'\r\n// import axios from 'axios'\r\n// import {GlobalState} from '../../../GlobalState'\r\n// import Loading from '../utils/loading/Loading'\r\n\r\n// const initialState = {\r\n//   product_id: '',\r\n//   title: '',\r\n//   price: 0,\r\n//   description: 'How to and tutorial videos of cool CSS effect, Web Design ideas,JavaScript libraries, Node.',\r\n//   content: 'Welcome to our channel Dev AT. Here you can learn web designing, UI/UX designing, html css tutorials, css animations and css effects, javascript and jquery tutorials and related so on.',\r\n//   category: '' \r\n  \r\n// }\r\n\r\n// function CreateProduct() {\r\n//     const state = useContext(GlobalState)\r\n//     const [product, setProduct] = useState(initialState)\r\n//     const [categories] = state.categoriesAPI.categories\r\n//     const [images, setImages] = useState(false)\r\n//     const [loading, setLoading] = useState(false)\r\n\r\n\r\n//     const [isAdmin] = state.userAPI.isAdmin\r\n//     const [token] = state.token\r\n\r\n//     const handleUpload = async e =>{\r\n//         e.preventDefault()\r\n//         try {\r\n//             if(!isAdmin) return alert(\"You're not an admin\")\r\n//             const file = e.target.files[0]\r\n            \r\n            \r\n//             if(!file) return alert(\"File not exist.\")\r\n\r\n//             if(file.size > 1024 * 1024) // 1mb\r\n//                 return alert(\"Size too large!\")\r\n\r\n//             if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\r\n//                 return alert(\"File format is incorrect.\")\r\n\r\n//             let formData = new FormData()\r\n//             formData.append('file', file)\r\n\r\n//             setLoading(true)\r\n//             const res = await axios.post('api/upload', formData, {\r\n//                     headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n//                 })\r\n//                 setLoading(false)\r\n//                 console.log(res)\r\n            \r\n//         } catch (err) {\r\n//             alert(err.response.data.msg)\r\n            \r\n//         }\r\n//     }\r\n  \r\n//   const styleUpload = {\r\n//     display: images ? \"block\" : \"none\"\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"create_product\">\r\n//       <div className=\"upload\">\r\n//           <input type=\"file\" name=\"file\" id=\"file_up\" onChange={handleUpload} />\r\n//           <div id=\"file_img\"  style={styleUpload} >\r\n//                   <img src=\"\" alt=\"\"/>\r\n//                   <span>X</span>\r\n//               </div>   \r\n//       </div>\r\n\r\n//       <form >\r\n//           <div className=\"row\">\r\n//               <label htmlFor=\"product_id\">Product ID</label>\r\n//               <input type=\"text\" name=\"product_id\" id=\"product_id\" required\r\n//               value={product.product_id}  />\r\n//           </div>\r\n\r\n//           <div className=\"row\">\r\n//               <label htmlFor=\"title\">Title</label>\r\n//               <input type=\"text\" name=\"title\" id=\"title\" required\r\n//               value={product.title} />\r\n//           </div>\r\n\r\n//           <div className=\"row\">\r\n//               <label htmlFor=\"price\">Price</label>\r\n//               <input type=\"number\" name=\"price\" id=\"price\" required\r\n//               value={product.price}  />\r\n//           </div>\r\n\r\n//           <div className=\"row\">\r\n//               <label htmlFor=\"description\">Description</label>\r\n//               <textarea type=\"text\" name=\"description\" id=\"description\" required\r\n//               value={product.description} rows =\"5\"  />\r\n//           </div>\r\n\r\n//           <div className=\"row\">\r\n//               <label htmlFor=\"content\">Content</label>\r\n//               <textarea type=\"text\" name=\"content\" id=\"content\" required\r\n//               value={product.content} rows =\"7\"  />\r\n//           </div>\r\n\r\n//           <div className=\"row\">\r\n//               <label htmlFor=\"categories\">Categories: </label>\r\n//               <select name=\"category\" value={product.category} >\r\n//                   <option value=\"\">Please select a category</option>\r\n//                   {\r\n//                       categories.map(category => (\r\n//                           <option value={category._id} key={category._id}>\r\n//                               {category.name}\r\n//                           </option>\r\n//                       ))\r\n//                   }\r\n//               </select>\r\n//           </div>\r\n\r\n//           <button type=\"submit\">Create</button>\r\n//       </form>\r\n// </div>\r\n//   )\r\n// }\r\n\r\n// export default CreateProduct\r\n\r\n"],"mappings":"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AQ,KAAK,EAAC,EAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAkC,EAE9CK,UAAU,CAAC+B,GAAG,CAACpC,QAAQ,iBACnB;YAAQ,KAAK,EAAEA,QAAQ,CAACqC,GAAI;YAAA,UACvBrC,QAAQ,CAACsC;UAAI,GADgBtC,QAAQ,CAACqC,GAAG;YAAA;YAAA;YAAA;UAAA,QAGjD,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAED;MAAA;QAAA;QAAA;QAAA;MAAA,QACP,eAEN;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB;IAAA;MAAA;MAAA;MAAA;IAAA,QAEnC;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEd;AAAC,GAzGQpC,aAAa;AAAA,KAAbA,aAAa;AA2GtB,eAAeA,aAAa;;AAmB5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}