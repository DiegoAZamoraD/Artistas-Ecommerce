{"ast":null,"code":"// import React, {useContext, useState, useEffect} from 'react'\n// import {GlobalState} from '../../../GlobalState'\n// import axios from 'axios'\n// import PaypalButton from './PaypalButton'\n\n// function Cart() {\n//     const state = useContext(GlobalState)\n//     const [cart, setCart] = state.userAPI.cart\n//     const [token] = state.token\n//     const [callback, setCallback] = state.userAPI.callback\n//     const [total, setTotal] = useState(0)\n\n//     useEffect(() =>{\n//         const getTotal = () =>{\n//             const total = cart.reduce((prev, item) => {\n//                 return prev + (item.price * item.quantity)\n//             },0)\n\n//             setTotal(total)\n//         }\n\n//         getTotal()\n\n//     },[cart])\n\n//     const addToCart = async (cart) =>{\n//         await axios.patch('/user/addcart', {cart}, {\n//             headers: {Authorization: token}\n//         })\n//     }\n\n//     const increment = (id) =>{\n//         cart.forEach(item => {\n//             if(item._id === id){\n//                 item.quantity += 1\n//             }\n//         })\n\n//         setCart([...cart])\n//         addToCart(cart)\n//     }\n\n//     const decrement = (id) =>{\n//         cart.forEach(item => {\n//             if(item._id === id){\n//                 item.quantity === 1 ? item.quantity = 1 : item.quantity -= 1\n//             }\n//         })\n\n//         setCart([...cart])\n//         addToCart(cart)\n//     }\n\n//     const removeProduct = id =>{\n//         if(window.confirm(\"Do you want to delete this product?\")){\n//             cart.forEach((item, index) => {\n//                 if(item._id === id){\n//                     cart.splice(index, 1)\n//                 }\n//             })\n\n//             setCart([...cart])\n//             addToCart(cart)\n//         }\n//     }\n\n//     const tranSuccess = async(payment) => {\n//         const {paymentID, address} = payment;\n\n//         await axios.post('/api/payment', {cart, paymentID, address}, {\n//             headers: {Authorization: token}\n//         })\n\n//         setCart([])\n//         addToCart([])\n//         alert(\"You have successfully placed an order.\")\n//         setCallback(!callback)\n//     }\n\n//     if(cart.length === 0) \n//         return <h2 style={{textAlign: \"center\", fontSize: \"5rem\"}}>Cart Empty</h2> \n\n//     return (\n//         <div>\n//             {\n//                 cart.map(product => (\n//                     <div className=\"detail cart\" key={product._id}>\n//                         <img src={product.images.url} alt=\"\" />\n\n//                         <div className=\"box-detail\">\n//                             <h2>{product.title}</h2>\n\n//                             <h3>$ {product.price * product.quantity}</h3>\n//                             <p>{product.description}</p>\n//                             <p>{product.content}</p>\n\n//                             <div className=\"amount\">\n//                                 <button onClick={() => decrement(product._id)}> - </button>\n//                                 <span>{product.quantity}</span>\n//                                 <button onClick={() => increment(product._id)}> + </button>\n//                             </div>\n\n//                             <div className=\"delete\" \n//                             onClick={() => removeProduct(product._id)}>\n//                                 X\n//                             </div>\n//                         </div>\n//                     </div>\n//                 ))\n//             }\n\n//             <div className=\"total\">\n//                 <h3>Total: $ {total}</h3>\n//                 <PaypalButton\n//                 total={total}\n//                 tranSuccess={tranSuccess} />\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default Cart","map":{"version":3,"names":[],"sources":["C:/Users/diego/OneDrive/Escritorio/Artistas-Mern/ecommerce/client/src/components/mainpages/cart/Cart.js"],"sourcesContent":["// import React, {useContext, useState, useEffect} from 'react'\n// import {GlobalState} from '../../../GlobalState'\n// import axios from 'axios'\n// import PaypalButton from './PaypalButton'\n\n// function Cart() {\n//     const state = useContext(GlobalState)\n//     const [cart, setCart] = state.userAPI.cart\n//     const [token] = state.token\n//     const [callback, setCallback] = state.userAPI.callback\n//     const [total, setTotal] = useState(0)\n\n//     useEffect(() =>{\n//         const getTotal = () =>{\n//             const total = cart.reduce((prev, item) => {\n//                 return prev + (item.price * item.quantity)\n//             },0)\n\n//             setTotal(total)\n//         }\n\n//         getTotal()\n\n//     },[cart])\n\n//     const addToCart = async (cart) =>{\n//         await axios.patch('/user/addcart', {cart}, {\n//             headers: {Authorization: token}\n//         })\n//     }\n\n\n//     const increment = (id) =>{\n//         cart.forEach(item => {\n//             if(item._id === id){\n//                 item.quantity += 1\n//             }\n//         })\n\n//         setCart([...cart])\n//         addToCart(cart)\n//     }\n\n//     const decrement = (id) =>{\n//         cart.forEach(item => {\n//             if(item._id === id){\n//                 item.quantity === 1 ? item.quantity = 1 : item.quantity -= 1\n//             }\n//         })\n\n//         setCart([...cart])\n//         addToCart(cart)\n//     }\n\n//     const removeProduct = id =>{\n//         if(window.confirm(\"Do you want to delete this product?\")){\n//             cart.forEach((item, index) => {\n//                 if(item._id === id){\n//                     cart.splice(index, 1)\n//                 }\n//             })\n\n//             setCart([...cart])\n//             addToCart(cart)\n//         }\n//     }\n\n//     const tranSuccess = async(payment) => {\n//         const {paymentID, address} = payment;\n\n//         await axios.post('/api/payment', {cart, paymentID, address}, {\n//             headers: {Authorization: token}\n//         })\n\n//         setCart([])\n//         addToCart([])\n//         alert(\"You have successfully placed an order.\")\n//         setCallback(!callback)\n//     }\n\n\n//     if(cart.length === 0) \n//         return <h2 style={{textAlign: \"center\", fontSize: \"5rem\"}}>Cart Empty</h2> \n\n//     return (\n//         <div>\n//             {\n//                 cart.map(product => (\n//                     <div className=\"detail cart\" key={product._id}>\n//                         <img src={product.images.url} alt=\"\" />\n\n//                         <div className=\"box-detail\">\n//                             <h2>{product.title}</h2>\n\n//                             <h3>$ {product.price * product.quantity}</h3>\n//                             <p>{product.description}</p>\n//                             <p>{product.content}</p>\n\n//                             <div className=\"amount\">\n//                                 <button onClick={() => decrement(product._id)}> - </button>\n//                                 <span>{product.quantity}</span>\n//                                 <button onClick={() => increment(product._id)}> + </button>\n//                             </div>\n                            \n//                             <div className=\"delete\" \n//                             onClick={() => removeProduct(product._id)}>\n//                                 X\n//                             </div>\n//                         </div>\n//                     </div>\n//                 ))\n//             }\n\n//             <div className=\"total\">\n//                 <h3>Total: $ {total}</h3>\n//                 <PaypalButton\n//                 total={total}\n//                 tranSuccess={tranSuccess} />\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default Cart"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}