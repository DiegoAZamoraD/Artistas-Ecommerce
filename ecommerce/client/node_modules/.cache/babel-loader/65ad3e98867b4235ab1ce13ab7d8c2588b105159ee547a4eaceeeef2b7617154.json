{"ast":null,"code":"\n\n// import {useState, useEffect} from 'react'\n// import axios from 'axios'\n\n// function UserApi(token) {\n\n//     const [isLogged, setIsLogged] = useState(false)\n//     const [isAdmin, setIsAdmin] = useState(false)\n//     const [cart,setCart] = useState([])\n//     const [history, setHistory] = useState([])\n//     const [callback, setCallback] = useState(false)\n\n//     useEffect(()=>{\n//         if(token){\n//             const getUser = async () =>{\n//                 try {\n//                     const res = await axios.get('/user/infor',{\n//                         headers: {Authorization: token}\n//                     })\n\n//                     setIsLogged(true)\n//                     res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\n\n//                     setCart(res.data.cart)\n\n//                 } catch (err) {\n//                         alert(err.response.data.msg)\n//                 }\n//             }\n\n//             getUser()\n//         }\n//     },[token])\n\n//     const addCart = async (product) =>{\n//         if(!isLogged) return alert(\"Please login to continue buying\")\n\n//         const check = cart.every(item =>{\n//             return item._id !== product._id\n//         })\n\n//         if(check){\n//             setCart([...cart, {...product, quantity: 1}])\n\n//             await axios.patch('/user/addcart', {cart: [...cart, {...product, quantity: 1}]},{\n//                 headers: {Authorization: token}\n//             })\n\n//         }else{\n//             alert(\"This product has been added to cart.\")\n//             } \n//         }\n\n//     return {\n//         isLogged: [isLogged, setIsLogged],\n//         isAdmin: [isAdmin, setIsAdmin],\n//         cart: [cart, setCart],\n//         addCart: addCart,\n//         history: [history, setHistory],\n//         callback: [callback, setCallback]\n//     }    \n\n// }\n\n// export default UserApi","map":{"version":3,"names":[],"sources":["C:/Users/diego/OneDrive/Escritorio/Artistas-Mern/ecommerce/client/src/api/UserApi.js"],"sourcesContent":["\r\n\r\n// import {useState, useEffect} from 'react'\r\n// import axios from 'axios'\r\n\r\n// function UserApi(token) {\r\n\r\n//     const [isLogged, setIsLogged] = useState(false)\r\n//     const [isAdmin, setIsAdmin] = useState(false)\r\n//     const [cart,setCart] = useState([])\r\n//     const [history, setHistory] = useState([])\r\n//     const [callback, setCallback] = useState(false)\r\n\r\n//     useEffect(()=>{\r\n//         if(token){\r\n//             const getUser = async () =>{\r\n//                 try {\r\n//                     const res = await axios.get('/user/infor',{\r\n//                         headers: {Authorization: token}\r\n//                     })\r\n\r\n//                     setIsLogged(true)\r\n//                     res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\r\n\r\n//                     setCart(res.data.cart)\r\n                    \r\n//                 } catch (err) {\r\n//                         alert(err.response.data.msg)\r\n//                 }\r\n//             }\r\n\r\n//             getUser()\r\n//         }\r\n//     },[token])\r\n\r\n\r\n\r\n//     const addCart = async (product) =>{\r\n//         if(!isLogged) return alert(\"Please login to continue buying\")\r\n\r\n//         const check = cart.every(item =>{\r\n//             return item._id !== product._id\r\n//         })\r\n\r\n//         if(check){\r\n//             setCart([...cart, {...product, quantity: 1}])\r\n\r\n//             await axios.patch('/user/addcart', {cart: [...cart, {...product, quantity: 1}]},{\r\n//                 headers: {Authorization: token}\r\n//             })\r\n\r\n//         }else{\r\n//             alert(\"This product has been added to cart.\")\r\n//             } \r\n//         }\r\n\r\n//     return {\r\n//         isLogged: [isLogged, setIsLogged],\r\n//         isAdmin: [isAdmin, setIsAdmin],\r\n//         cart: [cart, setCart],\r\n//         addCart: addCart,\r\n//         history: [history, setHistory],\r\n//         callback: [callback, setCallback]\r\n//     }    \r\n  \r\n// }\r\n\r\n// export default UserApi\r\n"],"mappings":";;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}