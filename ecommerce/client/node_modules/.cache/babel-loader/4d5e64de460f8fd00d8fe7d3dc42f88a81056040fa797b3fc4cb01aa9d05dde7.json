{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nfunction UserAPI(token) {\n  _s();\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          setCart(res.data.cart);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n      getUser();\n    }\n  }, [token]);\n  const addCart = async product => {\n    if (!isLogged) return alert(\"Please login to continue buying\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n    if (check) {\n      setCart([...cart, {\n        ...product,\n        quantity: 1\n      }]);\n      await axios.patch('/user/addcart', {\n        cart: [...cart, {\n          ...product,\n          quantity: 1\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n    } else {\n      alert(\"This product has been added to cart.\");\n    }\n  };\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart,\n    history: [history, setHistory]\n  };\n}\n_s(UserAPI, \"yzxmcxqkg20DNTPJiV0UMsZEH88=\");\n_c = UserAPI;\nexport default UserAPI;\n// import {useState, useEffect} from 'react'\n// import axios from 'axios'\n\n// function UserApi(token) {\n\n//     const [isLogged, setIsLogged] = useState(false)\n//     const [isAdmin, setIsAdmin] = useState(false)\n//     const [cart,setCart] = useState([])\n//     const [history, setHistory] = useState([])\n//     const [callback, setCallback] = useState(false)\n\n//     useEffect(()=>{\n//         if(token){\n//             const getUser = async () =>{\n//                 try {\n//                     const res = await axios.get('/user/infor',{\n//                         headers: {Authorization: token}\n//                     })\n\n//                     setIsLogged(true)\n//                     res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\n\n//                     setCart(res.data.cart)\n\n//                 } catch (err) {\n//                         alert(err.response.data.msg)\n//                 }\n//             }\n\n//             getUser()\n//         }\n//     },[token])\n\n//     const addCart = async (product) =>{\n//         if(!isLogged) return alert(\"Please login to continue buying\")\n\n//         const check = cart.every(item =>{\n//             return item._id !== product._id\n//         })\n\n//         if(check){\n//             setCart([...cart, {...product, quantity: 1}])\n\n//             await axios.patch('/user/addcart', {cart: [...cart, {...product, quantity: 1}]},{\n//                 headers: {Authorization: token}\n//             })\n\n//         }else{\n//             alert(\"This product has been added to cart.\")\n//             } \n//         }\n\n//     return {\n//         isLogged: [isLogged, setIsLogged],\n//         isAdmin: [isAdmin, setIsAdmin],\n//         cart: [cart, setCart],\n//         addCart: addCart,\n//         history: [history, setHistory],\n//         callback: [callback, setCallback]\n//     }    \n\n// }\n\n// export default UserApi\nvar _c;\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"names":["useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","history","setHistory","getUser","res","get","headers","Authorization","data","role","err","alert","response","msg","addCart","product","check","every","item","_id","quantity","patch"],"sources":["C:/Users/diego/OneDrive/Escritorio/Artistas-Mern/ecommerce/client/src/api/UserApi.js"],"sourcesContent":["\r\nimport {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction UserAPI(token) {\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [cart, setCart] = useState([])\r\n    const [history, setHistory] = useState([])\r\n\r\n    useEffect(() =>{\r\n        if(token){\r\n            const getUser = async () =>{\r\n                try {\r\n                    const res = await axios.get('/user/infor', {\r\n                        headers: {Authorization: token}\r\n                    })\r\n\r\n                    setIsLogged(true)\r\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\r\n\r\n                    setCart(res.data.cart)\r\n\r\n                } catch (err) {\r\n                    alert(err.response.data.msg)\r\n                }\r\n            }\r\n\r\n            getUser()\r\n            \r\n        }\r\n    },[token])\r\n\r\n    \r\n\r\n    const addCart = async (product) => {\r\n        if(!isLogged) return alert(\"Please login to continue buying\")\r\n\r\n        const check = cart.every(item =>{\r\n            return item._id !== product._id\r\n        })\r\n\r\n        if(check){\r\n            setCart([...cart, {...product, quantity: 1}])\r\n\r\n            await axios.patch('/user/addcart', {cart: [...cart, {...product, quantity: 1}]}, {\r\n                headers: {Authorization: token}\r\n            })\r\n\r\n        }else{\r\n            alert(\"This product has been added to cart.\")\r\n        }\r\n    }\r\n\r\n    return {\r\n        isLogged: [isLogged, setIsLogged],\r\n        isAdmin: [isAdmin, setIsAdmin],\r\n        cart: [cart, setCart],\r\n        addCart: addCart,\r\n        history: [history, setHistory]\r\n    }\r\n}\r\n\r\nexport default UserAPI\r\n// import {useState, useEffect} from 'react'\r\n// import axios from 'axios'\r\n\r\n// function UserApi(token) {\r\n\r\n//     const [isLogged, setIsLogged] = useState(false)\r\n//     const [isAdmin, setIsAdmin] = useState(false)\r\n//     const [cart,setCart] = useState([])\r\n//     const [history, setHistory] = useState([])\r\n//     const [callback, setCallback] = useState(false)\r\n\r\n//     useEffect(()=>{\r\n//         if(token){\r\n//             const getUser = async () =>{\r\n//                 try {\r\n//                     const res = await axios.get('/user/infor',{\r\n//                         headers: {Authorization: token}\r\n//                     })\r\n\r\n//                     setIsLogged(true)\r\n//                     res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\r\n\r\n//                     setCart(res.data.cart)\r\n                    \r\n//                 } catch (err) {\r\n//                         alert(err.response.data.msg)\r\n//                 }\r\n//             }\r\n\r\n//             getUser()\r\n//         }\r\n//     },[token])\r\n\r\n\r\n\r\n//     const addCart = async (product) =>{\r\n//         if(!isLogged) return alert(\"Please login to continue buying\")\r\n\r\n//         const check = cart.every(item =>{\r\n//             return item._id !== product._id\r\n//         })\r\n\r\n//         if(check){\r\n//             setCart([...cart, {...product, quantity: 1}])\r\n\r\n//             await axios.patch('/user/addcart', {cart: [...cart, {...product, quantity: 1}]},{\r\n//                 headers: {Authorization: token}\r\n//             })\r\n\r\n//         }else{\r\n//             alert(\"This product has been added to cart.\")\r\n//             } \r\n//         }\r\n\r\n//     return {\r\n//         isLogged: [isLogged, setIsLogged],\r\n//         isAdmin: [isAdmin, setIsAdmin],\r\n//         cart: [cart, setCart],\r\n//         addCart: addCart,\r\n//         history: [history, setHistory],\r\n//         callback: [callback, setCallback]\r\n//     }    \r\n  \r\n// }\r\n\r\n// export default UserApi\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}